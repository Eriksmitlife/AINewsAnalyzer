
export interface Language {
  code: string;
  name: string;
  flag: string;
}

export const SUPPORTED_LANGUAGES: Language[] = [
  { code: 'en', name: 'English', flag: 'üá∫üá∏' },
  { code: 'ru', name: '–†—É—Å—Å–∫–∏–π', flag: 'üá∑üá∫' },
  { code: 'es', name: 'Espa√±ol', flag: 'üá™üá∏' },
  { code: 'fr', name: 'Fran√ßais', flag: 'üá´üá∑' },
  { code: 'de', name: 'Deutsch', flag: 'üá©üá™' },
  { code: 'zh', name: '‰∏≠Êñá', flag: 'üá®üá≥' },
  { code: 'ja', name: 'Êó•Êú¨Ë™û', flag: 'üáØüáµ' },
  { code: 'ar', name: 'ÿßŸÑÿπÿ±ÿ®Ÿäÿ©', flag: 'üá∏üá¶' },
  { code: 'pt', name: 'Portugu√™s', flag: 'üáßüá∑' },
  { code: 'it', name: 'Italiano', flag: 'üáÆüáπ' },
];

export const translations = {
  en: {
    nav: {
      dashboard: 'Dashboard',
      news: 'News',
      exchange: 'Exchange',
      trading: 'Trading',
      auctions: 'Live Auctions',
      portfolio: 'Portfolio',
      analytics: 'Analytics',
      profile: 'Profile',
    },
    dashboard: {
      title: 'AI-Powered News Dashboard',
      subtitle: 'Real-time news analysis with blockchain integration',
      totalArticles: 'Total Articles',
      totalNfts: 'NFTs Created',
      totalUsers: 'Active Users',
      systemHealth: 'System Health',
      quickActions: 'Quick Actions',
      generateNft: 'Generate NFT',
      runAnalysis: 'Run AI Analysis',
      collectNews: 'Collect News',
      trendingNews: 'Trending News',
      recentNfts: 'Recent NFTs',
      aiInsights: 'AI Insights',
    },
    news: {
      title: 'News Feed',
      subtitle: 'Stay updated with AI-analyzed news from trusted sources',
      search: 'Search news, articles, or topics...',
      category: 'Category',
      sortBy: 'Sort by',
      filter: 'Filter',
      clear: 'Clear',
      noArticles: 'No articles found',
      tryAdjusting: 'Try adjusting your search criteria or check back later for new content.',
      trending: 'Trending Now',
      categories: 'Categories',
      recentActivity: 'Recent Activity',
    },
    themes: {
      light: 'Light',
      dark: 'Dark',
      neon: 'Neon',
    },
    seo: {
      metaTitle: 'AutoNews.AI - AI-Powered News Analysis & NFT Trading Platform',
      metaDescription: 'Get real-time AI analysis of breaking news. Trade news-based NFTs on our secure platform. Stay ahead with intelligent news insights.',
      keywords: 'AI news, news analysis, NFT trading, blockchain news, artificial intelligence, real-time news, crypto news, tech news',
    },
  },
  ru: {
    nav: {
      dashboard: '–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
      news: '–ù–æ–≤–æ—Å—Ç–∏',
      exchange: '–ë–∏—Ä–∂–∞',
      trading: '–¢—Ä–µ–π–¥–∏–Ω–≥',
      auctions: '–ñ–∏–≤—ã–µ –∞—É–∫—Ü–∏–æ–Ω—ã',
      portfolio: '–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ',
      analytics: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
      profile: '–ü—Ä–æ—Ñ–∏–ª—å',
    },
    dashboard: {
      title: '–ü–∞–Ω–µ–ª—å –Ω–æ–≤–æ—Å—Ç–µ–π —Å –ò–ò',
      subtitle: '–ê–Ω–∞–ª–∏–∑ –Ω–æ–≤–æ—Å—Ç–µ–π –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Å –±–ª–æ–∫—á–µ–π–Ω –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π',
      totalArticles: '–í—Å–µ–≥–æ —Å—Ç–∞—Ç–µ–π',
      totalNfts: '–°–æ–∑–¥–∞–Ω–æ NFT',
      totalUsers: '–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
      systemHealth: '–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã',
      quickActions: '–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è',
      generateNft: '–°–æ–∑–¥–∞—Ç—å NFT',
      runAnalysis: '–ó–∞–ø—É—Å—Ç–∏—Ç—å –ò–ò –∞–Ω–∞–ª–∏–∑',
      collectNews: '–°–æ–±—Ä–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏',
      trendingNews: '–¢—Ä–µ–Ω–¥–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏',
      recentNfts: '–ù–µ–¥–∞–≤–Ω–∏–µ NFT',
      aiInsights: '–ò–ò –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
    },
    news: {
      title: '–õ–µ–Ω—Ç–∞ –Ω–æ–≤–æ—Å—Ç–µ–π',
      subtitle: '–û—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –≤ –∫—É—Ä—Å–µ —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏, –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ò–ò',
      search: '–ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π, —Å—Ç–∞—Ç–µ–π –∏–ª–∏ —Ç–µ–º...',
      category: '–ö–∞—Ç–µ–≥–æ—Ä–∏—è',
      sortBy: '–°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ',
      filter: '–§–∏–ª—å—Ç—Ä',
      clear: '–û—á–∏—Å—Ç–∏—Ç—å',
      noArticles: '–°—Ç–∞—Ç—å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã',
      tryAdjusting: '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–∑–∂–µ.',
      trending: '–í —Ç—Ä–µ–Ω–¥–µ —Å–µ–π—á–∞—Å',
      categories: '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏',
      recentActivity: '–ù–µ–¥–∞–≤–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
    },
    themes: {
      light: '–°–≤–µ—Ç–ª–∞—è',
      dark: '–¢—ë–º–Ω–∞—è',
      neon: '–ù–µ–æ–Ω',
    },
    seo: {
      metaTitle: 'AutoNews.AI - –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –ò–ò –∞–Ω–∞–ª–∏–∑–∞ –Ω–æ–≤–æ—Å—Ç–µ–π –∏ —Ç–æ—Ä–≥–æ–≤–ª–∏ NFT',
      metaDescription: '–ü–æ–ª—É—á–∞–π—Ç–µ –ò–ò –∞–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏. –¢–æ—Ä–≥—É–π—Ç–µ NFT –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–∞ –Ω–∞—à–µ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ.',
      keywords: '–ò–ò –Ω–æ–≤–æ—Å—Ç–∏, –∞–Ω–∞–ª–∏–∑ –Ω–æ–≤–æ—Å—Ç–µ–π, —Ç–æ—Ä–≥–æ–≤–ª—è NFT, –±–ª–æ–∫—á–µ–π–Ω –Ω–æ–≤–æ—Å—Ç–∏, –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç, –Ω–æ–≤–æ—Å—Ç–∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, –∫—Ä–∏–ø—Ç–æ –Ω–æ–≤–æ—Å—Ç–∏',
    },
  },
  // –î–æ–±–∞–≤–∏–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —è–∑—ã–∫–∏...
  es: {
    nav: {
      dashboard: 'Panel de Control',
      news: 'Noticias',
      exchange: 'Intercambio',
      trading: 'Trading',
      auctions: 'Subastas en Vivo',
      portfolio: 'Portafolio',
      analytics: 'Anal√≠ticas',
      profile: 'Perfil',
    },
    seo: {
      metaTitle: 'AutoNews.AI - Plataforma de An√°lisis de Noticias IA y Trading NFT',
      metaDescription: 'Obt√©n an√°lisis de IA de noticias de √∫ltima hora en tiempo real. Comercia NFTs basados en noticias en nuestra plataforma segura.',
      keywords: 'noticias IA, an√°lisis noticias, trading NFT, noticias blockchain, inteligencia artificial, noticias tiempo real',
    },
  },
};

export type TranslationKey = keyof typeof translations.en;

class I18nService {
  private currentLanguage: string = 'en';
  private listeners: Set<() => void> = new Set();

  constructor() {
    this.currentLanguage = localStorage.getItem('language') || 'en';
  }

  setLanguage(language: string) {
    this.currentLanguage = language;
    localStorage.setItem('language', language);
    document.documentElement.setAttribute('lang', language);
    this.listeners.forEach(listener => listener());
  }

  getCurrentLanguage() {
    return this.currentLanguage;
  }

  translate(key: string): string {
    const keys = key.split('.');
    let value: any = translations[this.currentLanguage as keyof typeof translations];
    
    for (const k of keys) {
      value = value?.[k];
    }
    
    return value || key;
  }

  subscribe(listener: () => void) {
    this.listeners.add(listener);
    return () => this.listeners.delete(listener);
  }
}

export const i18n = new I18nService();

// React Provider Component
import { createContext, useContext, useEffect, useState, ReactNode } from 'react';

const I18nContext = createContext<{
  language: string;
  translate: (key: string) => string;
  setLanguage: (language: string) => void;
}>({
  language: 'en',
  translate: (key: string) => key,
  setLanguage: () => {},
});

export const useI18n = () => useContext(I18nContext);

export function I18nProvider({ children }: { children: ReactNode }) {
  const [language, setLanguageState] = useState(i18n.getCurrentLanguage());

  useEffect(() => {
    const unsubscribe = i18n.subscribe(() => {
      setLanguageState(i18n.getCurrentLanguage());
    });

    return unsubscribe;
  }, []);

  const setLanguage = (lang: string) => {
    i18n.setLanguage(lang);
  };

  const translate = (key: string) => {
    return i18n.translate(key);
  };

  return (
    <I18nContext.Provider value={{ language, translate, setLanguage }}>
      {children}
    </I18nContext.Provider>
  );
}
